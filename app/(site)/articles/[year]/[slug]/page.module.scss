@use "../../../../../styles/mixins" as *;

.article {
    @include grid-stack(var(--space-s));

    max-inline-size: var(--typography-measure);
}

.summary {
    color: var(--colour-text-subtle);
    font-size: var(--typography-size-200);
}

.meta {
    color: var(--colour-text);
    font-size: var(--typography-size-100);
}

.return {
    margin-top: var(--space-xl);
    font-size: var(--typography-size-100);
    text-align: center;
}

.article :global(ol) {
    @include grid-stack(var(--space-s));
}

.article :global(blockquote) {
    margin: 0;
    padding: var(--space-m) var(--space-l);
    border: var(--border-width-l) solid var(--colour-text-subtle);
    background: var(--surface-level-1);
    border-radius: var(--radius-m);
}

.article :global(img) {
    border-radius: var(--radius-m);
    margin: var(--space-2xl) auto var(--space-xxs);
}

.article :global(figcaption) {
    @include centered-column;

    justify-content: center;
    padding: var(--space-l);
}

.article :global(figcaption p) {
    font-size: var(--typography-size-100);
    text-align: center;
    width: 100%;
}

.article :global(blockquote p) {
    margin: 0;
}

.article :global(.footnotes) {
    font-size: var(--typography-size-100);
    margin-top: var(--space-xl);
    padding-top: var(--space-m);

    @include grid-stack(var(--space-s));
}

.article :global(.footnotes ol) {
    @include grid-stack(var(--space-xs));

    margin: 0;
    padding-left: var(--space-2xl);
}

.article :global(.footnotes li p) {
    margin: 0;
}

.article :global(sup[id^="fnref"] > a) {
    text-decoration: none;
}

@container (min-width:50rem) {
    .article :global(figcaption p),
    .article :global(img) {
        max-width: calc(var(--typography-measure) / 1.5);
    }
}
