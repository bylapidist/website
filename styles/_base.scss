@use "mixins" as *;

*,
*::before,
*::after {
    box-sizing: border-box;
    font-variant-numeric: tabular-nums;
    font-feature-settings: "kern", "liga", "clig", "calt";
    font-variation-settings:
        "opsz" var(--typography-font-opsz),
        "slnt" var(--typography-font-slnt);
}

html,
body {
    margin: 0;
    padding: 0;
}

html {
    scroll-behavior: smooth;
    scroll-padding-block-start: var(--header-offset, 0);
    scrollbar-width: thin;
    scrollbar-color: var(--colour-primary) var(--surface-level-1);
    accent-color: var(--colour-primary);
}

body {
    background-color: var(--surface-level-0);
    color: var(--colour-text);
    transition:
        background-color var(--motion-dur-200) var(--motion-ease-standard),
        color var(--motion-dur-200) var(--motion-ease-standard);
    will-change: background-color, color;

    @include stack(null);

    min-block-size: 100vh;
    font-family: var(--font-body), sans-serif;
    line-height: var(--typography-line-normal);
}

main {
    flex: 1 0 auto;

    @include stack(null);
}

@supports (font-size: clamp(1rem, 1vw, 2rem)) {
    body {
        font-size: var(--typography-size-200);
    }
}

img,
picture,
video,
canvas,
svg {
    display: block;
    max-width: 100%;
    height: auto;
}

h1 {
    font-size: var(--typography-size-400);
}

h2 {
    font-size: var(--typography-size-300);
}

h3 {
    font-size: var(--typography-size-200);
}

figure {
    margin: 0;
}

:where(h4, h5, h6) {
    font-size: var(--typography-size-100);
}

:where(h1, h2, h3, h4, h5, h6) {
    font-family: var(--font-header), sans-serif;
    text-wrap: balance;
    hyphens: auto;
    line-height: var(--typography-line-wide);
    font-variation-settings:
        "opsz" var(--typography-font-opsz),
        "slnt" var(--typography-font-slnt);
}

:where(h1, h2, h3, h4, h5, h6)[id] {
    scroll-margin-block-start: var(--space-2xl);
}

:where(a:not([class])) {
    color: var(--colour-primary);
    text-decoration: underline;
    text-decoration-color: currentcolor;
    transition:
        color var(--motion-dur-200) var(--motion-ease-standard),
        text-decoration-color var(--motion-dur-200) var(--motion-ease-standard);

    &:visited {
        color: var(--colour-primary);
    }

    &:focus-visible {
        text-decoration-color: currentcolor;
    }

    @media (hover: hover) and (pointer: fine) {
        &:hover {
            color: var(--colour-primary-hover);
            text-decoration-color: currentcolor;
        }

        &:active {
            color: var(--colour-primary-active);
            text-decoration-color: currentcolor;
        }
    }

    @media (prefers-reduced-motion: reduce) {
        transition: none;
    }
}

.footnotes a {
    text-decoration: underline;
}

section {
    padding-block: var(--space-3xl);
}

.visually-hidden {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    /* stylelint-disable-next-line property-no-deprecated */
    clip: rect(0 0 0 0);
    clip-path: inset(50%);
    white-space: nowrap;
    border: 0;
}

.skip-link {
    position: absolute;
    inset-block-start: 0;
    inset-inline-start: 0;
    padding: var(--space-xs);
    background: var(--colour-primary);
    color: var(--colour-on-primary);
    transform: translateY(-100%);
    z-index: var(--z-3);
}

.skip-link:focus {
    transform: translateY(0);
}

summary {
    display: flex;
    align-items: center;
    cursor: pointer;
    list-style: none;
    padding-block: var(--space-xs);
    padding-inline: var(--space-s);
    min-block-size: var(--size-tap-min);
    border-radius: var(--radius-s);
    font-family: var(--font-header), sans-serif;
}

summary::-webkit-details-marker {
    display: none;
}

summary::after {
    content: "â–¸";
    margin-inline-start: var(--space-xs);
    transition: transform var(--motion-dur-200) var(--motion-ease-standard);
}

details[open] summary::after {
    transform: rotate(90deg);
}

code {
    background: var(--surface-level-2);
    border-radius: var(--radius-s);
    padding: var(--space-xxs);
    padding-inline: var(--space-xs);
    font-size: var(--typography-size-100);
    white-space: nowrap;
}

pre {
    border-radius: var(--radius-m);
}

@media (hover: hover) and (pointer: fine) {
    summary:hover {
        background: var(--surface-level-1-hover);
    }

    summary:active {
        background: var(--surface-level-1-active);
    }
}

:focus-visible {
    outline: var(--border-focus-ring);
    outline-offset: var(--space-focus-ring-offset);
    transition: outline-offset var(--motion-dur-200) var(--motion-ease-standard);
}

:target {
    outline: var(--border-focus-ring);
    outline-offset: var(--space-focus-ring-offset);
    background: var(--surface-level-0);
}

::selection {
    background: var(--colour-primary);
    color: var(--colour-on-primary);
}

/* Scrollbar styling */
@supports selector(::-webkit-scrollbar) {
    html::-webkit-scrollbar {
        width: 0.6rem;
        height: 0.6rem;
    }

    html::-webkit-scrollbar-track {
        background: var(--surface-level-1);
    }

    html::-webkit-scrollbar-thumb {
        background: var(--colour-border);
        border-radius: var(--radius-m);
        transition: background var(--motion-dur-200) var(--motion-ease-standard);
    }

    html::-webkit-scrollbar-thumb:hover {
        background: var(--colour-primary);
    }
}

@media (prefers-reduced-motion: reduce) {
    *,
    *::before,
    *::after {
        animation: none !important;
        transition: none !important;
        scroll-behavior: auto !important;
    }
}

@media print {
    body {
        background: var(--surface-level-0);
        color: var(--colour-text);
    }

    nav,
    .ctaGroup,
    button,
    a[href^="mailto"],
    .skip-link {
        display: none !important;
    }

    a::after {
        content: " (" attr(href) ")";
    }
}
