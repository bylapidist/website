{"version":3,"file":"component---src-pages-index-tsx-5bf9078f93e742f74980.js","mappings":"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","sources":["webpack://@lapidist/website/./src/layouts/SectionLayout/index.tsx","webpack://@lapidist/website/./src/components/Education/index.tsx","webpack://@lapidist/website/./src/components/Experience/index.tsx","webpack://@lapidist/website/./src/components/Intro/index.tsx","webpack://@lapidist/website/./src/components/Project/index.tsx","webpack://@lapidist/website/./src/components/Project/styles.module.scss","webpack://@lapidist/website/./src/components/OpenSource/index.tsx","webpack://@lapidist/website/./src/components/OpenSource/styles.module.scss","webpack://@lapidist/website/./src/components/IllustrationProject/index.tsx","webpack://@lapidist/website/./src/components/IllustrationProject/styles.module.scss","webpack://@lapidist/website/./src/components/Illustration/index.tsx","webpack://@lapidist/website/./src/components/Illustration/styles.module.scss","webpack://@lapidist/website/./src/pages/index.tsx","webpack://@lapidist/website/./src/pages/styles.module.scss"],"sourcesContent":["import React, { ReactNode } from 'react';\nimport { Box, Heading } from '@lapidist/components';\n\ntype SectionLayoutProps = {\n    className?: string;\n    title: string;\n    children: ReactNode;\n};\n\nconst SectionLayout = ({ className, title, children }: SectionLayoutProps) => {\n    return (\n        <Box as=\"section\">\n            <Box gutterY=\"large\">\n                <Heading as=\"h3\" size=\"small\">\n                    {title}\n                </Heading>\n            </Box>\n            <Box className={className}>{children}</Box>\n        </Box>\n    );\n};\n\nexport default SectionLayout;\n","import React from 'react';\nimport { Timeline } from '@lapidist/components';\nimport SectionLayout from '../../layouts/SectionLayout';\n\nconst Education = () => {\n    const education = [\n        {\n            title: 'BA (Hons) Illustration',\n            from: '2007',\n            to: '2011',\n            urlTitle: 'Edinburgh College of Art',\n            url: 'https://www.eca.ed.ac.uk'\n        }\n    ];\n\n    return (\n        <SectionLayout title=\"Education\">\n            <Timeline size=\"small\" items={education} />\n        </SectionLayout>\n    );\n};\n\nexport default Education;\n","import React from 'react';\nimport { Timeline } from '@lapidist/components';\nimport SectionLayout from '../../layouts/SectionLayout';\n\nconst Experience = () => {\n    const experiences = [\n        {\n            title: 'Senior Software Developer',\n            from: '2024',\n            to: 'Present',\n            urlTitle: 'Encompass',\n            url: 'https://www.encompasscorporation.com/'\n        },\n        {\n            title: 'Senior Software Engineer',\n            from: '2021',\n            to: '2023',\n            urlTitle: 'LendInvest',\n            url: 'https://www.lendinvest.com'\n        },\n        {\n            title: 'Frontend Software Developer',\n            from: '2020',\n            to: '2021',\n            urlTitle: 'Golden Charter',\n            url: 'https://www.goldencharter.co.uk'\n        },\n        {\n            title: 'Frontend Team Lead',\n            from: '2019',\n            to: '2019',\n            urlTitle: 'Markup',\n            url: 'https://www.linkedin.com/company/markup-digital-ltd'\n        },\n        {\n            title: 'Senior Software Engineer',\n            from: '2018',\n            to: '2019',\n            urlTitle: 'Markup',\n            url: 'https://www.linkedin.com/company/markup-digital-ltd'\n        },\n        {\n            title: 'Frontend Developer',\n            from: '2016',\n            to: '2017',\n            urlTitle: 'Everyone',\n            url: 'https://www.weareeveryone.com'\n        },\n        {\n            title: 'Senior Digital Designer',\n            from: '2014',\n            to: '2016',\n            urlTitle: 'Ibiza Digital Media',\n            url: 'https://www.linkedin.com/company/ibiza-digital-media'\n        }\n    ];\n\n    return (\n        <SectionLayout title=\"Experience\">\n            <Timeline size=\"small\" items={experiences} />\n        </SectionLayout>\n    );\n};\n\nexport default Experience;\n","import React from 'react';\nimport { Box, Heading, Text } from '@lapidist/components';\n\nconst Intro = () => (\n    <>\n        <Heading as=\"h2\" size=\"medium\" weight=\"regular\">\n            A Senior Frontend Engineer from Glasgow with over a decade of\n            experience building software and relationships.\n        </Heading>\n        <Box gutterY=\"large\">\n            <Text>\n                My current focus is on engineering inclusivity and\n                accessibility, enabling the creation of user-centric design\n                systems that foster empathy and exceptional user experiences.\n            </Text>\n        </Box>\n    </>\n);\n\nexport default Intro;\n","import React from 'react';\nimport { Box, Heading, Link, Tag, Text } from '@lapidist/components';\nimport { faArrowUpRightFromSquare } from '@fortawesome/free-solid-svg-icons';\nimport * as styles from './styles.module.scss';\n\ntype ProjectProps = {\n    title: string;\n    description: string;\n    version: string;\n    url: string;\n};\n\nconst Project = ({ title, description, version, url }: ProjectProps) => {\n    return (\n        <Box\n            className={styles.project}\n            as=\"section\"\n            elevation=\"small\"\n            gutter=\"large\"\n        >\n            <Box as=\"header\" gutter=\"small\">\n                <Heading as=\"h4\" size=\"small\" weight=\"medium\">\n                    {title}\n                </Heading>\n            </Box>\n\n            <Box as=\"main\" gutter=\"small\">\n                <Text size=\"small\">{description}</Text>\n            </Box>\n\n            <Box className={styles.separator} as=\"hr\" gutter=\"large\" />\n\n            <Box className={styles.meta} as=\"footer\">\n                <Tag level=\"secondary\">{version}</Tag>\n                <Box className={styles.links}>\n                    <Link\n                        icon={faArrowUpRightFromSquare}\n                        href={url}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        size=\"small\"\n                    >\n                        GitHub\n                    </Link>\n                </Box>\n            </Box>\n        </Box>\n    );\n};\n\nexport default Project;\n","// extracted by mini-css-extract-plugin\nexport var links = \"styles-module--links--5ae4b\";\nexport var meta = \"styles-module--meta--fda45\";\nexport var project = \"styles-module--project--1c374\";\nexport var separator = \"styles-module--separator--af453\";","import React from 'react';\nimport SectionLayout from '../../layouts/SectionLayout';\nimport Project from '../Project';\nimport * as styles from './styles.module.scss';\nimport { graphql, useStaticQuery } from 'gatsby';\n\ntype Repository = {\n    node: {\n        isArchived: boolean;\n        description: string;\n        homepageUrl: string;\n        id: string;\n        latestRelease: {\n            tagName: string;\n        };\n        name: string;\n        updatedAt: string;\n        url: string;\n    };\n};\n\ntype Response = {\n    github: {\n        organization: {\n            repositories: {\n                edges: Repository[];\n            };\n        };\n    };\n};\n\nconst OpenSource = () => {\n    const {\n        github: {\n            organization: {\n                repositories: { edges: projects }\n            }\n        }\n    }: Response = useStaticQuery(graphql`\n        query {\n            github {\n                organization(login: \"bylapidist\") {\n                    repositories(first: 100, privacy: PUBLIC) {\n                        edges {\n                            node {\n                                id\n                                name\n                                description\n                                url\n                                updatedAt\n                                homepageUrl\n                                isArchived\n                                latestRelease {\n                                    tagName\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    `);\n\n    return (\n        <SectionLayout className={styles.project} title=\"Open Source\">\n            {projects.map(\n                (project) =>\n                    !project.node.isArchived && (\n                        <Project\n                            key={project.node.id}\n                            title={`@lapidist/${project.node.name}`}\n                            description={project.node.description}\n                            version={project.node.latestRelease.tagName}\n                            url={project.node.url}\n                        />\n                    )\n            )}\n        </SectionLayout>\n    );\n};\n\nexport default OpenSource;\n","// extracted by mini-css-extract-plugin\nexport var project = \"styles-module--project--b8f0b\";","import React from 'react';\nimport { Box } from '@lapidist/components';\nimport * as styles from './styles.module.scss';\n\ntype IllustrationProjectProps = {\n    title: string;\n    image: string;\n};\n\nconst IllustrationProject = ({ title, image }: IllustrationProjectProps) => {\n    return (\n        <Box\n            className={styles.project}\n            as=\"section\"\n            elevation=\"small\"\n            gutter=\"large\"\n        >\n            <img alt={title} src={image} />\n        </Box>\n    );\n};\n\nexport default IllustrationProject;\n","// extracted by mini-css-extract-plugin\nexport var project = \"styles-module--project--342e6\";","import React from 'react';\nimport SectionLayout from '../../layouts/SectionLayout';\nimport IllustrationProject from '../IllustrationProject';\nimport * as styles from './styles.module.scss';\nconst Illustration = () => {\n    const projects = [\n        {\n            title: 'Self Portrait',\n            image: '/illustration/self-portrait.jpeg'\n        },\n        {\n            title: 'Nessa',\n            image: '/illustration/nessa.jpeg'\n        }\n    ];\n\n    return (\n        <SectionLayout className={styles.project} title=\"Illustration\">\n            {projects.map((project) => (\n                <IllustrationProject\n                    key={project.title}\n                    title={project.title}\n                    image={project.image}\n                />\n            ))}\n        </SectionLayout>\n    );\n};\n\nexport default Illustration;\n","// extracted by mini-css-extract-plugin\nexport var project = \"styles-module--project--2638a\";","import React from 'react';\nimport { Box, Tabs } from '@lapidist/components';\nimport * as styles from './styles.module.scss';\nimport Education from '../components/Education';\nimport Experience from '../components/Experience';\nimport Intro from '../components/Intro';\nimport OpenSource from '../components/OpenSource';\nimport Illustration from '../components/Illustration';\nimport PageLayout from '../layouts/PageLayout';\n\nconst IndexPage = (): JSX.Element => {\n    const links = [\n        {\n            href: '/brett-dorrans-cv.pdf',\n            target: '_blank',\n            rel: 'noreferrer noopener',\n            children: 'CV'\n        },\n        {\n            href: 'https://github.com/brettdorrans',\n            target: '_blank',\n            rel: 'noreferrer noopener',\n            children: 'GitHub'\n        },\n        {\n            href: 'https://github.com/bylapidist',\n            target: '_blank',\n            rel: 'noreferrer noopener',\n            children: 'Open Source'\n        },\n        {\n            href: 'https://www.linkedin.com/in/brettdorrans',\n            target: '_blank',\n            rel: 'noreferrer noopener',\n            children: 'LinkedIn'\n        },\n        {\n            href: 'mailto:hello@lapidist.net',\n            children: 'Email'\n        }\n    ];\n\n    return (\n        <PageLayout>\n            <Box as=\"main\" gutterY=\"large\">\n                <Intro />\n                <Box gutterY=\"large\">\n                    <Tabs links={links} size=\"small\" data-nosnippet />\n                </Box>\n                <Box className={styles.sections}>\n                    <Experience />\n                    <Education />\n                    <OpenSource />\n                    <Illustration />\n                </Box>\n            </Box>\n        </PageLayout>\n    );\n};\n\nexport default IndexPage;\nexport { default as Head } from '../components/Head';\n","// extracted by mini-css-extract-plugin\nexport var sections = \"styles-module--sections--417fb\";"],"names":["_ref","className","title","children","React","Box","as","gutterY","Heading","size","Education","SectionLayout","Timeline","items","from","to","urlTitle","url","Experience","Intro","weight","Text","description","version","elevation","gutter","Tag","level","Link","icon","faArrowUpRightFromSquare","href","target","rel","OpenSource","github","organization","repositories","edges","projects","useStaticQuery","map","project","node","isArchived","Project","key","id","name","latestRelease","tagName","image","alt","src","Illustration","IllustrationProject","IndexPage","PageLayout","Tabs","links"],"sourceRoot":""}