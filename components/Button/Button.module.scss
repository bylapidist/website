@use "../../styles/mixins" as *;

.button {
    @include inline-center;

    border: var(--border-width-s) solid transparent;
    cursor: pointer;
    font: inherit;
    font-family: var(--font-family-header);
    font-weight: var(--font-weight-semibold);
    text-decoration: none;
    padding-block: var(--space-scale-075);
    padding-inline: var(--space-scale-100);
    border-radius: var(--radius-m);
    min-block-size: var(--size-tap-min);
    box-shadow: var(--shadow-elev-1);
    will-change: box-shadow, transform, background;
}

.button[data-size="sm"] {
    padding-block: var(--space-scale-050);
    padding-inline: var(--space-scale-050);
    font-size: var(--typography-size-100);
}

.button[data-size="lg"] {
    padding-block: var(--space-scale-100);
    padding-inline: var(--space-scale-150);
    font-size: var(--typography-size-200);
}

.button[data-variant="primary"] {
    background: var(--colour-primary);
    color: var(--colour-on-primary, var(--colour-text));
}

.button[data-variant="secondary"] {
    background: transparent;
    color: var(--colour-primary);
    border-color: var(--colour-primary);
}

.button:disabled,
.button[aria-disabled="true"] {
    cursor: not-allowed;
    opacity: var(--opacity-60);
}

.button:not(:disabled, [aria-disabled="true"]):focus-visible {
    box-shadow: var(--shadow-elev-2);
}

@media (hover: hover) and (pointer: fine) {
    .button:not(:disabled, [aria-disabled="true"]) {
        transition:
            background var(--motion-dur-200) var(--motion-ease-standard),
            box-shadow var(--motion-dur-200) var(--motion-ease-standard),
            transform var(--motion-dur-120) var(--motion-ease-emphasized);
    }

    .button:not(:disabled, [aria-disabled="true"]):hover {
        box-shadow: var(--shadow-elev-2);
        transform: translateY(-1px);
    }

    .button:not(
            :disabled,
            [aria-disabled="true"]
        )[data-variant="primary"]:hover {
        background: var(--colour-primary-hover);
        color: var(--colour-on-primary);
    }

    .button:not(
            :disabled,
            [aria-disabled="true"]
        )[data-variant="secondary"]:hover {
        background: var(--colour-primary-hover);
        color: var(--colour-on-primary);
    }

    .button:not(
            :disabled,
            [aria-disabled="true"]
        )[data-variant="primary"]:active {
        background: var(--colour-primary-active);
    }

    .button:not(
            :disabled,
            [aria-disabled="true"]
        )[data-variant="secondary"]:active {
        background: var(--colour-primary-active);
    }

    .button:not(:disabled, [aria-disabled="true"]):active {
        box-shadow: var(--shadow-elev-3);
        transform: translateY(1px);
    }
}

@media (prefers-reduced-motion: reduce) {
    .button {
        transform: none;
    }

    .button:not(:disabled, [aria-disabled="true"]):hover {
        transform: none;
    }
}
